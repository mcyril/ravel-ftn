//	ravel_ftn.h/*	Copyright й 1997 Cyril Moorzin	All rights reserved		Ravel 1.0 PUBLIC DOMAIN part.	Ravel is FTN software for Macintosh*/#ifndef RAVEL_FTN#define RAVEL_FTNtypedef struct {			// Internal FTN address storage structure	short		zone;	short		net;	short		node;	short		point;} addr;typedef struct {			// Internal FTN address storage structure with domain	addr		ad;	Str31		domain;} daddr;#define PKTVER	2/*ееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееее*/struct _pkthdr						/* FTS-0001                       */{	short			orig_node;		/* originating node               */	short			dest_node;		/* destination node               */	short			year;			/* 0..99  when packet was created */	short			month;			/* 0..11  when packet was created */	short			day;			/* 1..31  when packet was created */	short			hour;			/* 0..23  when packet was created */	short			minute;			/* 0..59  when packet was created */	short			second;			/* 0..59  when packet was created */	short			rate;			/* destination's baud rate        */	short			ver;			/* packet version, must be 2      */	short			orig_net;		/* originating network number     */	short			dest_net;		/* destination network number     */		unsigned char	product;		/* product type                   */	unsigned char	serial;			/* serial number (some systems)   */	unsigned char	password[8];	/* session/pickup password        */	short			orig_zone;		/* originating zone               */	short			dest_zone;		/* Destination zone               */	unsigned char	B_fill2[16];	long			B_fill3;};struct _pkthdr45					/* FSC-0045 (Type 2.2) packet type*/{	short			orig_node;		/* originating node               */	short			dest_node;		/* destination node               */	short			orig_point;		/* originating point              */	short			dest_point;		/* destination point              */	unsigned char	b_fill1[8];		/* Unused, must be zero           */	short			subver;			/* packet subversion, must be 2   */	short			ver;			/* packet version, must be 2      */	short			orig_net;		/* originating network number     */	short			dest_net;		/* destination network number     */	unsigned char	product;		/* product type                   */	unsigned char	serial;			/* serial number (some systems)   */	unsigned char	password[8];	/* session/pickup password        */	short			orig_zone;		/* originating zone               */	short			dest_zone;		/* Destination zone               */	unsigned char	orig_domain[8];	/* originating domain             */	unsigned char	dest_domain[8];	/* destination domain             */	long			B_fill3;};struct _pkthdr39					/* FSC-0039 (Type 2) packet type  */{	short			orig_node;		/* originating node               */	short			dest_node;		/* destination node               */	short			year;			/* 0..99  when packet was created */	short			month;			/* 0..11  when packet was created */	short			day;			/* 1..31  when packet was created */	short			hour;			/* 0..23  when packet was created */	short			minute;			/* 0..59  when packet was created */	short			second;			/* 0..59  when packet was created */	short			rate;			/* destination's baud rate        */	short			ver;			/* packet version, must be 2      */	short			orig_net;		/* originating network number     */	short			dest_net;		/* destination network number     */	unsigned char	product_low;	/* FTSC product type (low unsigned char)   */	unsigned char	prod_rev_hi;	/* product rev (low unsigned char)         */	unsigned char	password[8];	/* session/pickup password        */	short			qm_orig_zone;	/* Zone info from QM software  */	short			qm_dest_zone;	/* Zone info from QM software  */	short			auxnet;			/* Aux Net (for Type 2+) */	short			CapValid;		/* CapWord with bytes swapped.    */	unsigned char	product_hi;		/* FTSC product type (high unsigned char)  */	unsigned char	prod_rev_low;	/* product rev (hi unsigned char)          */	short			CapWord;		/* Capability word                */	short			orig_zone;		/* originating zone               */	short			dest_zone;		/* Destination zone               */	short			orig_point;		/* originating point              */	short			dest_point;		/* destination point              */	long			ProdData;		/* Product-specific data          */};/*ееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееее*/    /* Packet header, one per packet */typedef struct _miopkt {unsigned short int  OrigNode,                         /*Originating node*/	// + 00					DestNode,                         /*Destination node*/	// + 02					Year,                     /*Year created (1993-nnnn)*/	// + 04					Month,                        /*Month created (0-11)*/	// + 06					Day,                            /*Day created (1-31)*/	// + 08					Hour,                          /*Hour created (0-23)*/	// + 0A					Minute,                      /*Minute created (0-59)*/	// + 0C					Second,                      /*Second created (0-59)*/	// + 0E					Rate,                            /*Baudrate (unused)*/	// + 10					Version,                        /*Packet version (2)*/	// + 12					OrigNet,                           /*Originating net*/	// + 14					DestNet;                           /*Destination net*/	// + 16unsigned char       PCodeLo,                  /*Product code (low-order)*/	// + 18					PRevMajor,                           /*Major version*/	// + 19					Password[8];          /*Packet password (not ASCIIZ)*/	// + 1Aunsigned short int  QMOrigZone,               /*Originating zone (QMail)*/	// + 22					QMDestZone,               /*Destination zone (QMail)*/	// + 24					AuxNet,                     /*Auxillary net (unused)*/	// + 26					CWValidate;                     /*CapWord validation*/	// + 28unsigned char       PCodeHi,                 /*Product code (high-order)*/	// + 2A					PRevMinor;                           /*Minor version*/	// + 2Bunsigned short int  CWCapWord,                            /*Capabilities*/	// + 2C					OrigZone,                /*Originating zone (FSC-39)*/	// + 2E					DestZone,                /*Destination zone (FSC-39)*/	// + 30					OrigPoint,              /*Originating point (FSC-39)*/	// + 32					DestPoint;              /*Destination point (FSC-39)*/	// + 34unsigned long       LongData;            /*Product dependent information*/	// + 36};																			//   38//	FTS1PKTHDR;/*ееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееее*//*PKT header:Location  Type 2         Type 2+        Type 2.2--------  --------       --------       ----------00-01     OrigNode       OrigNode       OrigNode02-03     DestNode       DestNode       DestNode04-05     Year           Year           OrigPoint06-07     Month          Month          DestPoint08-09     Day            Day            $0000(reserved)0A-0B     Hour           Hour           $0000(reserved)0C-0D     Minute         Minute         $0000(reserved)0E-0F     Second         Second         $0000(reserved)10-11     Baud           Baud           PktSubVer12-13     PktVer         PktVer         PktVer14-15     OrigNet        OrigNet        OrigNet16-17     DestNet        DestNet        DestNet18        ProdCode       ProdCodeL      ProdCode19        SerNo          ProdVerMajor   ProdRev1A-21     Password       Password       Password22-23     OrigZone(opt)  OrigZone(opt)  OrigZone24-25     DestZone(opt)  DestZone(opt)  DestZone26-27     $0000(fill)    AuxNet         OrigDomain28-29     $0000(fill)    CapValid           "2A        $00(fill)      ProdCodeH          "2B        $00(fill)      ProdVerMinor       "2C-2D     $0000(fill)    CapWord            "2E-2F     $0000(fill)    OrigZone       DestDomain30-31     $0000(fill)    DestZone           "32-33     $0000(fill)    OrigPoint          "34-35     $0000(fill)    DestPoint          "36-37     $0000(fill)    ProdData       ProdData38-39     $0000(fill)        "              "3A-            */typedef struct    {    unsigned short int  OrigNode,                         /*Originating node*/	// + 00                        DestNode,                         /*Destination node*/	// + 02                        Year,                     /*Year created (1993-nnnn)*/	// + 04                        Month,                        /*Month created (0-11)*/	// + 06                        Day,                            /*Day created (1-31)*/	// + 08                        Hour,                          /*Hour created (0-23)*/	// + 0A                        Minute,                      /*Minute created (0-59)*/	// + 0C                        Second,                      /*Second created (0-59)*/	// + 0E                        Rate,                            /*Baudrate (unused)*/	// + 10                        Version,                        /*Packet version (2)*/	// + 12                        OrigNet,                           /*Originating net*/	// + 14                        DestNet;                           /*Destination net*/	// + 16    unsigned char       PCodeLo,                  /*Product code (low-order)*/	// + 18                        PRevMajor,                           /*Major version*/	// + 19                        Password[8];          /*Packet password (not ASCIIZ)*/	// + 1A    unsigned short int  QMOrigZone,               /*Originating zone (QMail)*/	// + 22                        QMDestZone,               /*Destination zone (QMail)*/	// + 24                        AuxNet,                     /*Auxillary net (unused)*/	// + 26                        CWValidate;                     /*CapWord validation*/	// + 28    unsigned char       PCodeHi,                 /*Product code (high-order)*/	// + 2A                        PRevMinor;                           /*Minor version*/	// + 2B    unsigned short int  CWCapWord,                            /*Capabilities*/	// + 2C                        OrigZone,                /*Originating zone (FSC-39)*/	// + 2E                        DestZone,                /*Destination zone (FSC-39)*/	// + 30                        OrigPoint,              /*Originating point (FSC-39)*/	// + 32                        DestPoint;              /*Destination point (FSC-39)*/	// + 34    unsigned long       LongData;            /*Product dependent information*/	// + 36    }																			//   38    FTS1PKTHDR;typedef struct    {    unsigned short int  Version,                        /*Packet version (2)*/	// + 00                        OrigNode,                         /*Originating node*/	// + 02                        DestNode,                         /*Destination node*/	// + 04                        OrigNet,                           /*Originating net*/	// + 06                        DestNet,                           /*Destination net*/	// + 08                        Attr,                                  /*FTS1 status*/	// + 0A                        Cost;                              /*Cost of message*/	// + 0C                        														//   0E    /*    **    The message header follows this but is of variable length ASCIIZ    **    strings in the order:  	  						AsciiDate,  						ToUser,  						FromUser,  						Subject,  						MsgText.      	*/    }    FTS1PKTMSG;#endif
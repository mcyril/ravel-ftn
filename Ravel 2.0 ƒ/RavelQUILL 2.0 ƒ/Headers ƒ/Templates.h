typedef struct _note {	struct _note	*next_note;	addr			pad_address;	Str63			pad_name;} *notePtr;typedef struct _custom {	struct _custom	*next_custom;	Str31			name;	} customRecord, *customRecordPtr;typedef struct _template {	struct _template	*next_template;	char				*areaname;	char				*template;	} templateRecord, *templateRecordPtr;extern	Str255				cookname;extern	Str255				padname;extern	Str63				fontname;extern	short				viewSize;extern	short				viewFont;extern	templateRecordPtr	prevent;extern	templateRecordPtr	poster;extern	templateRecordPtr	replyText;extern	templateRecordPtr	commentText;extern	char				*prevent_def;extern	char				*poster_def;extern	char				*replyText_def;extern	char				*commentText_def;extern	char				*receiptText;extern	char				*tearLine;extern	short			users;extern	short			cuser;extern	char			*username[5];extern	short			origins;extern	short			corigin;extern	char			*origin[5];extern	notePtr			notepad;extern	customRecordPtr	custom;extern	Boolean			netmailorigin,						uucpaware;extern	char			q_wasfrom[MName+1];extern	char			q_wasto[MName+1];extern	char			q_nowfrom[MName+1];extern	char			q_nowto[MName+1];extern	char			q_date[MDate+1];extern	char			q_subj[MSubject+1];extern	RGBColor		quoteGray,						quote1Gray,						quoteGrayFg,						quote1GrayFg,						kludgeBack,						kludgeColor;void	ReadTemplates (void);Boolean	myname (StringPtr tmp);void	performsubstitution (char **storage, char *templater);Ptr		look_for_template (char *areaname, templateRecordPtr templates, char *default_template);
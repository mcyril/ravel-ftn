/* ------------------------------------------------------------------------------ *//* Include file for DLOGLibrary ------------------------------------------------- */#ifndef __QDOFFSCREEN__#include <QDOffscreen.h>#endifextern Boolean EffectsOn;		// Effect's flagenum {	putAtTop,	putAtBottom,	putWithSorting};/* Drawing ---------------------------------------------------------------------- */pascal void Draw2HDLines (DialogPtr theDialog, short theID);pascal void DrawDBox (DialogPtr theDialog, short theID);void DrawDIcon (DialogPtr theDialog, short IconID, short theItem);pascal void DrawDShadow (DialogPtr theDialog, short theID);pascal void DrawHDLine (DialogPtr theDialog, short theID);pascal void DrawVDLine (DialogPtr theDialog, short theID);void BoxText (DialogPtr theDialog, short theID, Str255 theStr, short theJust);void BoxString (DialogPtr theDialog, short theID, Str255 itemName, Str255 dot3);void ShadowText (DialogPtr dialog, short itemNo, Boolean center, Str255 text);void ShadowTextBox (Rect *r, Boolean center, Str255 text);void DrawIconItem (DialogPtr dialog, Rect *destRect, Ptr iconData, short iconType);void ZoomGlobalRect (Rect *r1, Boolean direction);/* Get item values -------------------------------------------------------------- */unsigned char GetButtonState (DialogPtr	 theDialog, short theButton);Boolean GetCheck (DialogPtr theDialog, short theItem);short GetDInt (DialogPtr theDialog, short theID);long GetDLong (DialogPtr theDialog, short theID);short GetPopUpItem (DialogPtr theDialog, short theItem);void GetText (DialogPtr theDialog, short theID, Str255 theStr);short GetRadioButton (DialogPtr dialog, short item1, short item2);short PopButton (DialogPtr theDialog, short theButton);void GetItemRect (DialogPtr dialog, short itemNo, Rect *r);ControlHandle GetItemControl (DialogPtr dialog, short itemNo);/* Set item values -------------------------------------------------------------- */void SetButton (DialogPtr  theDialog, short theButton, short theState);void SetButtonTitle (DialogPtr  theDialog, short theButton, Str255 theTitle);void SetCheck(DialogPtr theDialog, short theItem, Boolean theMode);short SetPopUpItem(DialogPtr theDialog, short theItem, short num);void PutText (DialogPtr theDialog, short theID, Str255 theStr);void PushButton (DialogPtr theDialog, short theButton, short theState);Boolean SetRadioButton (DialogPtr dialog, short item1, short item2, short item);/* Item manipulation's ---------------------------------------------------------- */void DefaultButton (DialogPtr theDialog, short theID);void Default1Button (DialogPtr	theDialog, short theID);void ClickCheck (DialogPtr theDialog, short theItem);void FalseClick (DialogPtr theDialog, short theItem);void HiliteItem (DialogPtr theDialog, short theItem, Boolean theState);void HiliteRect (Rect *rect);void ActivateItem (DialogPtr theDialog, short theID, Boolean state);Boolean TrackButton (DialogPtr theDialog, short theItem);void MakeBackRegion (DialogPtr dialog, short item, ...);Ptr SaveItems (DialogPtr dialog, short items, ...);void RestoreItems (DialogPtr dialog, Ptr firstItem);void SetUserItem (DialogPtr theDialog, short itemNo, Handle hook);void DisposeUserItem (DialogPtr theDialog, short itemNo);void InvalItem (DialogPtr dialog, short itemNo);void UpdtButton (DialogPtr dialog, short itemNo, short state);/* Progress bar routines -------------------------------------------------------- */void FillProgressBar (DialogPtr theDialog, short itemNo, 						unsigned long max, unsigned long current);void DrawProgressBar (DialogPtr theDialog, short itemNo);void RedrawProgressBar (DialogPtr theDialog, short itemNo);/* Offscreen routines ----------------------------------------------------------- */Boolean CreateOffscreenBitMap (GrafPtr *newOffscreen, Rect *inBounds);void DestroyOffscreenBitMap (GrafPtr);Boolean CreateOffscreenPixMap (CGrafPtr *newOffscreen, Rect *inBounds);void DestroyOffscreenPixMap (CGrafPtr oldOffscreen);void SaveRect (GrafPtr src, CGrafPtr offscreen, Rect *rSrc);void RestoreRect (GrafPtr src, CGrafPtr offscreen, Rect *rSrc);/* PixMap routines -------------------------------------------------------------- */PixMapHandle CreatePixMap (Rect *inBounds);void DestroyPixMap (PixMapHandle gPixMap);void MakeInversePixMap (PixMapPtr src, PixMapPtr dst);/* Panel routines --------------------------------------------------------------- */GrafPtr OpenPanel (DialogPtr dialog, Rect *hotRect, Rect *rBounds, PixMapHandle *saved);void ClosePanel (DialogPtr dialog, GrafPtr myPortPtr, Rect *rBounds, PixMapHandle saved);Boolean PtInScreen (Point pt, short offsetH, short offsetV);CGrafPtr OpenCPanel (DialogPtr dialog, Rect *hotRect, Rect *rBounds, PixMapHandle *saved);void CloseCPanel (DialogPtr dialog, CGrafPtr myPortPtr, Rect *rBounds, PixMapHandle saved);void CreateOffscreenBuffer (Rect *bounds, short depthBuffer, GWorldPtr *gWorld);/* List maintenance ------------------------------------------------------------- */ListHandle InitListItem (DialogPtr dialog, short itemNo,							 short cellVSize, short selFlags);void PutResourcesToList (DialogPtr dialog, ListHandle list, ResType restype,							Boolean oneResource, short resID);void PutStringToList (ListHandle list, Str255 name, short mode);Boolean GetListState (ListHandle list);void UpdateListItem (DialogPtr dialog, short itemNo, ListHandle list);/* 3d & color drawing routines -------------------------------------------------- */RGBColor *GetGrayColor (short index);void DrawColorLine (Rect *itemRect);void FrameOutline (Rect *itemRect);void Frame3DRect (Rect *myRect, short depth, Boolean state);void FrameColorRect (Rect *myRect);void FrameRectShadow (Rect *theBox);/* System component's status routines ------------------------------------------- */Boolean HasColor (void);Boolean HasColorPort (GrafPtr port);Boolean HasRectColor (Rect r);Boolean System7 (void);Boolean System607 (void);short GetSystemVersion (void);/* Menu routines ---------------------------------------------------------------- */void NormalizeMenuItem (Str255 item);void AddResMenuWithSort (MenuHandle menu, ResType type);/* ------------------------------------------------------------------------------ */void DrawOnlyGrowIcon (WindowPtr window);
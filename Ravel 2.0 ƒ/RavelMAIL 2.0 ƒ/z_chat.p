function TZModem.Z_GetZDL : integer;begin  c := Z_qk_read;{  [Skip...] }    case c of         CAN : Result := GOTCAN;       ZCRCE,       ZCRCG,       ZCRCQ,       ZCRCW : begin                Result := (c or GOTOR);                {Chat -----------------}                if ChatEnabled then                 begin                  repeat                   c := Z_qk_read;                   ChatInProc(c);                  until c = 0;                  ChatOutProc;                 end;                {Chat --------}               end;  end;{ [Skip...] }end;procedure TZModem.SZ_SendData(var Buf: BufType; BLength: integer; FrameEnd: byte);begin{ [Skip...] }   CRC:=UpdCRC(FrameEnd, CRC);   Z_SendByte(ZDLE);   Z_SendByte(FrameEnd);   {Chat --------}   if ChatEnabled then   begin    if (FrameEnd = ZCRCG) or       (FrameEnd = ZCRCW) then     begin      ChatOutProc;     end;    Z_SendByte(0);   end;   {Chat --------}   CRC := UpdCRC(0,CRC);   CRC := UpdCRC(0,CRC);   SZ_Z_SendByte(Lo(CRC shr 8));   SZ_Z_SendByte(Lo(CRC));  end;{ [Skip...] }end;function TZModem.SZ_SendFileData : integer;begin{ [Skip...] }    if e = ZCRCW then goto WaitAck;    while ReceiverReady do    begin      c:=Z_GetByte(2);      case c of        CAN, ZPAD :        begin          SZ_SendData(txbuf, 0, ZCRCE);          goto waitack        end;        xferCarrierLost :         begin          SZ_SendFileData := xferERROR;          Exit;        end;       else        begin         if ChatEnabled then          ChatInProc(c); {Chat -----------------}        end;      end;{case}    end; {while}  until e <> ZCRCG;{ [Skip...] }end;
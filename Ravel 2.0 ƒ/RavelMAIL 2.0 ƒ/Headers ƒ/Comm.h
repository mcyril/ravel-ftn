Boolean	CHAR_AVAIL (void);short	MODEM_IN (void);short	PEEKBYTE (void);short	TIMED_READ (short t, void (*idle)(void));void	BUFFER_BYTE (unsigned char ch, void (*idle)(void));void	UNBUFFER_BYTES (void (*idle)(void));void	SENDBYTE (unsigned char c, void (*idle)(void));void	SENDCHARS (unsigned char *c, long len, short fuflo, void (*idle)(void));Boolean	OUT_EMPTY (void);void	CLEAR_OUTBOUND (void);void	CLEAR_INBOUND (void);void	RAISE_DTR (void);void	LOWER_DTR (void);Boolean	OpenSerial (StringPtr portname, short setup, short hsk);void	CloseSerial (void);short	SerialGetSetup (short, short *, short *, short *, short *);short	SerialSetSetup (short, short, short, short, short *);void	SerialReset (short setup);Boolean SerialDCD (void);Boolean SerialCTS (void);void	send_can (void);void	do_break (Boolean);short	MakeCMOpen (char *number);Boolean	MakeCMAccept (Boolean accpt);short	MakeTCPOpen (char *number);void	mioCMResume (Boolean flag);void	mioCMIdle (void);void	mioCMEvent (long refCon, EventRecord *event);Boolean	INVOKE (void);//#define	CARRIER		true#define	CARRIER	SerialDCD()#if defined(powerc) || defined(__powerc)#else#define	FASTER#endif//	Boolean buffer_new (void);/* ZModem Prototypes */short	Send_Zmodem (StringPtr fname, char *alias, short fsent, short wazoo);short	get_Zmodem (StringPtr rcvpath, Ptr xferinfo);/* Janus Prototypes */void	Janus (void);/* Hydra Prototypes */void hydra_init (unsigned long want_options, long hydra_modifier);void hydra_deinit (void);short hydra (char *txpathname, char *txalias);struct baud_str{	unsigned long rate_value;	unsigned long rate_mask;};
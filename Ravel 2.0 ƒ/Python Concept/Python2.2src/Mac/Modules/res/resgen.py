# Generated from 'Moes:Applications (Mac OS 9):Metrowerks CodeWarrior 7.0:Metrowerks CodeWarrior:MacOS Support:Universal:Interfaces:CIncludes:Resources.h'f = ResFunction(short, 'InitResources',    condition='#if TARGET_API_MAC_OS8',)functions.append(f)f = ResFunction(void, 'RsrcZoneInit',    condition='#if TARGET_API_MAC_OS8',)functions.append(f)f = ResFunction(void, 'CloseResFile',    (short, 'refNum', InMode),)functions.append(f)f = ResFunction(OSErr, 'ResError',)functions.append(f)f = ResFunction(short, 'CurResFile',)functions.append(f)f = ResMethod(short, 'HomeResFile',    (Handle, 'theResource', InMode),)resmethods.append(f)f = ResFunction(void, 'CreateResFile',    (ConstStr255Param, 'fileName', InMode),    condition='#if TARGET_API_MAC_OS8',)functions.append(f)f = ResFunction(short, 'OpenResFile',    (ConstStr255Param, 'fileName', InMode),    condition='#if TARGET_API_MAC_OS8',)functions.append(f)f = ResFunction(void, 'UseResFile',    (short, 'refNum', InMode),)functions.append(f)f = ResFunction(short, 'CountTypes',)functions.append(f)f = ResFunction(short, 'Count1Types',)functions.append(f)f = ResFunction(void, 'GetIndType',    (ResType, 'theType', OutMode),    (short, 'index', InMode),)functions.append(f)f = ResFunction(void, 'Get1IndType',    (ResType, 'theType', OutMode),    (short, 'index', InMode),)functions.append(f)f = ResFunction(void, 'SetResLoad',    (Boolean, 'load', InMode),)functions.append(f)f = ResFunction(short, 'CountResources',    (ResType, 'theType', InMode),)functions.append(f)f = ResFunction(short, 'Count1Resources',    (ResType, 'theType', InMode),)functions.append(f)f = ResFunction(Handle, 'GetIndResource',    (ResType, 'theType', InMode),    (short, 'index', InMode),)functions.append(f)f = ResFunction(Handle, 'Get1IndResource',    (ResType, 'theType', InMode),    (short, 'index', InMode),)functions.append(f)f = ResFunction(Handle, 'GetResource',    (ResType, 'theType', InMode),    (short, 'theID', InMode),)functions.append(f)f = ResFunction(Handle, 'Get1Resource',    (ResType, 'theType', InMode),    (short, 'theID', InMode),)functions.append(f)f = ResFunction(Handle, 'GetNamedResource',    (ResType, 'theType', InMode),    (ConstStr255Param, 'name', InMode),)functions.append(f)f = ResFunction(Handle, 'Get1NamedResource',    (ResType, 'theType', InMode),    (ConstStr255Param, 'name', InMode),)functions.append(f)f = ResMethod(void, 'MacLoadResource',    (Handle, 'theResource', InMode),)resmethods.append(f)f = ResMethod(void, 'ReleaseResource',    (Handle, 'theResource', InMode),)resmethods.append(f)f = ResMethod(void, 'DetachResource',    (Handle, 'theResource', InMode),)resmethods.append(f)f = ResFunction(short, 'UniqueID',    (ResType, 'theType', InMode),)functions.append(f)f = ResFunction(short, 'Unique1ID',    (ResType, 'theType', InMode),)functions.append(f)f = ResMethod(short, 'GetResAttrs',    (Handle, 'theResource', InMode),)resmethods.append(f)f = ResMethod(void, 'GetResInfo',    (Handle, 'theResource', InMode),    (short, 'theID', OutMode),    (ResType, 'theType', OutMode),    (Str255, 'name', OutMode),)resmethods.append(f)f = ResMethod(void, 'SetResInfo',    (Handle, 'theResource', InMode),    (short, 'theID', InMode),    (ConstStr255Param, 'name', InMode),)resmethods.append(f)f = ResMethod(void, 'AddResource',    (Handle, 'theData', InMode),    (ResType, 'theType', InMode),    (short, 'theID', InMode),    (ConstStr255Param, 'name', InMode),)resmethods.append(f)f = ResMethod(long, 'GetResourceSizeOnDisk',    (Handle, 'theResource', InMode),)resmethods.append(f)f = ResMethod(long, 'GetMaxResourceSize',    (Handle, 'theResource', InMode),)resmethods.append(f)f = ResMethod(long, 'RsrcMapEntry',    (Handle, 'theResource', InMode),    condition='#if TARGET_API_MAC_OS8',)resmethods.append(f)f = ResMethod(void, 'SetResAttrs',    (Handle, 'theResource', InMode),    (short, 'attrs', InMode),)resmethods.append(f)f = ResMethod(void, 'ChangedResource',    (Handle, 'theResource', InMode),)resmethods.append(f)f = ResMethod(void, 'RemoveResource',    (Handle, 'theResource', InMode),)resmethods.append(f)f = ResFunction(void, 'UpdateResFile',    (short, 'refNum', InMode),)functions.append(f)f = ResMethod(void, 'WriteResource',    (Handle, 'theResource', InMode),)resmethods.append(f)f = ResFunction(void, 'SetResPurge',    (Boolean, 'install', InMode),)functions.append(f)f = ResFunction(short, 'GetResFileAttrs',    (short, 'refNum', InMode),)functions.append(f)f = ResFunction(void, 'SetResFileAttrs',    (short, 'refNum', InMode),    (short, 'attrs', InMode),)functions.append(f)f = ResFunction(short, 'OpenRFPerm',    (ConstStr255Param, 'fileName', InMode),    (short, 'vRefNum', InMode),    (SignedByte, 'permission', InMode),)functions.append(f)f = ResFunction(Handle, 'RGetResource',    (ResType, 'theType', InMode),    (short, 'theID', InMode),    condition='#if TARGET_API_MAC_OS8',)functions.append(f)f = ResFunction(short, 'HOpenResFile',    (short, 'vRefNum', InMode),    (long, 'dirID', InMode),    (ConstStr255Param, 'fileName', InMode),    (SignedByte, 'permission', InMode),)functions.append(f)f = ResFunction(void, 'HCreateResFile',    (short, 'vRefNum', InMode),    (long, 'dirID', InMode),    (ConstStr255Param, 'fileName', InMode),)functions.append(f)f = ResFunction(short, 'FSpOpenResFile',    (FSSpec_ptr, 'spec', InMode),    (SignedByte, 'permission', InMode),)functions.append(f)f = ResFunction(void, 'FSpCreateResFile',    (FSSpec_ptr, 'spec', InMode),    (OSType, 'creator', InMode),    (OSType, 'fileType', InMode),    (ScriptCode, 'scriptTag', InMode),)functions.append(f)f = ResMethod(void, 'SetResourceSize',    (Handle, 'theResource', InMode),    (long, 'newSize', InMode),)resmethods.append(f)f = ResMethod(Handle, 'GetNextFOND',    (Handle, 'fondHandle', InMode),)resmethods.append(f)f = ResFunction(OSErr, 'InsertResourceFile',    (SInt16, 'refNum', InMode),    (RsrcChainLocation, 'where', InMode),    condition='#if TARGET_API_MAC_CARBON',)functions.append(f)f = ResFunction(OSErr, 'DetachResourceFile',    (SInt16, 'refNum', InMode),    condition='#if TARGET_API_MAC_CARBON',)functions.append(f)f = ResFunction(Boolean, 'FSpResourceFileAlreadyOpen',    (FSSpec_ptr, 'resourceFile', InMode),    (Boolean, 'inChain', OutMode),    (SInt16, 'refNum', OutMode),    condition='#if TARGET_API_MAC_CARBON',)functions.append(f)f = ResFunction(OSErr, 'FSpOpenOrphanResFile',    (FSSpec_ptr, 'spec', InMode),    (SignedByte, 'permission', InMode),    (SInt16, 'refNum', OutMode),    condition='#if TARGET_API_MAC_CARBON',)functions.append(f)f = ResFunction(OSErr, 'GetTopResourceFile',    (SInt16, 'refNum', OutMode),    condition='#if TARGET_API_MAC_CARBON',)functions.append(f)f = ResFunction(OSErr, 'GetNextResourceFile',    (SInt16, 'curRefNum', InMode),    (SInt16, 'nextRefNum', OutMode),    condition='#if TARGET_API_MAC_CARBON',)functions.append(f)f = ResFunction(short, 'FSOpenResFile',    (FSRef_ptr, 'ref', InMode),    (SignedByte, 'permission', InMode),)functions.append(f)f = ResFunction(void, 'FSCreateResFile',    (FSRef_ptr, 'parentRef', InMode),    (UniCharCount, 'nameLength', InMode),    (UniChar_ptr, 'name', InMode),    (FSCatalogInfoBitmap, 'whichInfo', InMode),    (FSCatalogInfo_ptr, 'catalogInfo', InMode),    (FSRef, 'newRef', OutMode),    (FSSpec, 'newSpec', OutMode),)functions.append(f)f = ResFunction(Boolean, 'FSResourceFileAlreadyOpen',    (FSRef_ptr, 'resourceFileRef', InMode),    (Boolean, 'inChain', OutMode),    (SInt16, 'refNum', OutMode),)functions.append(f)f = ResFunction(OSErr, 'FSCreateResourceFile',    (FSRef_ptr, 'parentRef', InMode),    (UniCharCount, 'nameLength', InMode),    (UniChar_ptr, 'name', InMode),    (FSCatalogInfoBitmap, 'whichInfo', InMode),    (FSCatalogInfo_ptr, 'catalogInfo', InMode),    (UniCharCount, 'forkNameLength', InMode),    (UniChar_ptr, 'forkName', InMode),    (FSRef, 'newRef', OutMode),    (FSSpec, 'newSpec', OutMode),)functions.append(f)f = ResFunction(OSErr, 'FSOpenResourceFile',    (FSRef_ptr, 'ref', InMode),    (UniCharCount, 'forkNameLength', InMode),    (UniChar_ptr, 'forkName', InMode),    (SignedByte, 'permissions', InMode),    (SInt16, 'refNum', OutMode),)functions.append(f)
# Generated from 'Moes:Applications (Mac OS 9):Metrowerks CodeWarrior 7.0:Metrowerks CodeWarrior:MacOS Support:Universal:Interfaces:CIncludes:MacWindows.h'f = Function(WindowRef, 'GetNewCWindow',    (short, 'windowID', InMode),    (NullStorage, 'wStorage', InMode),    (WindowRef, 'behind', InMode),)functions.append(f)f = Function(WindowRef, 'NewWindow',    (NullStorage, 'wStorage', InMode),    (Rect_ptr, 'boundsRect', InMode),    (ConstStr255Param, 'title', InMode),    (Boolean, 'visible', InMode),    (short, 'theProc', InMode),    (WindowRef, 'behind', InMode),    (Boolean, 'goAwayFlag', InMode),    (long, 'refCon', InMode),)functions.append(f)f = Function(WindowRef, 'GetNewWindow',    (short, 'windowID', InMode),    (NullStorage, 'wStorage', InMode),    (WindowRef, 'behind', InMode),)functions.append(f)f = Function(WindowRef, 'NewCWindow',    (NullStorage, 'wStorage', InMode),    (Rect_ptr, 'boundsRect', InMode),    (ConstStr255Param, 'title', InMode),    (Boolean, 'visible', InMode),    (short, 'procID', InMode),    (WindowRef, 'behind', InMode),    (Boolean, 'goAwayFlag', InMode),    (long, 'refCon', InMode),)functions.append(f)f = Function(OSStatus, 'CreateNewWindow',    (WindowClass, 'windowClass', InMode),    (WindowAttributes, 'attributes', InMode),    (Rect_ptr, 'contentBounds', InMode),    (ExistingWindowPtr, 'outWindow', OutMode),)functions.append(f)f = Function(OSStatus, 'CreateWindowFromResource',    (SInt16, 'resID', InMode),    (ExistingWindowPtr, 'outWindow', OutMode),)functions.append(f)f = Method(OSStatus, 'GetWindowOwnerCount',    (WindowRef, 'window', InMode),    (UInt32, 'outCount', OutMode),)methods.append(f)f = Method(OSStatus, 'CloneWindow',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(ItemCount, 'GetWindowRetainCount',    (WindowRef, 'inWindow', InMode),)methods.append(f)f = Method(OSStatus, 'RetainWindow',    (WindowRef, 'inWindow', InMode),)methods.append(f)f = Method(OSStatus, 'ReleaseWindow',    (WindowRef, 'inWindow', InMode),)methods.append(f)f = Method(OSStatus, 'ReshapeCustomWindow',    (WindowRef, 'window', InMode),    condition='#if TARGET_API_MAC_CARBON',)methods.append(f)f = Method(OSStatus, 'GetWindowWidgetHilite',    (WindowRef, 'inWindow', InMode),    (WindowDefPartCode, 'outHilite', OutMode),)methods.append(f)f = Method(OSStatus, 'GetWindowClass',    (WindowRef, 'window', InMode),    (WindowClass, 'outClass', OutMode),)methods.append(f)f = Method(OSStatus, 'GetWindowAttributes',    (WindowRef, 'window', InMode),    (WindowAttributes, 'outAttributes', OutMode),)methods.append(f)f = Method(OSStatus, 'ChangeWindowAttributes',    (WindowRef, 'window', InMode),    (WindowAttributes, 'setTheseAttributes', InMode),    (WindowAttributes, 'clearTheseAttributes', InMode),    condition='#if TARGET_API_MAC_CARBON',)methods.append(f)f = Method(OSStatus, 'SetWindowClass',    (WindowRef, 'inWindow', InMode),    (WindowClass, 'inWindowClass', InMode),)methods.append(f)f = Method(OSStatus, 'SetWindowModality',    (WindowRef, 'inWindow', InMode),    (WindowModality, 'inModalKind', InMode),    (WindowRef, 'inUnavailableWindow', InMode),)methods.append(f)f = Method(OSStatus, 'GetWindowModality',    (WindowRef, 'inWindow', InMode),    (WindowModality, 'outModalKind', OutMode),    (ExistingWindowPtr, 'outUnavailableWindow', OutMode),)methods.append(f)f = Function(OSStatus, 'ShowFloatingWindows',)functions.append(f)f = Function(OSStatus, 'HideFloatingWindows',)functions.append(f)f = Function(Boolean, 'AreFloatingWindowsVisible',)functions.append(f)f = Method(void, 'SetWinColor',    (WindowRef, 'window', InMode),    (WCTabHandle, 'newColorTable', InMode),    condition='#if !TARGET_API_MAC_CARBON',)methods.append(f)f = Function(void, 'SetDeskCPat',    (PixPatHandle, 'deskPixPat', InMode),    condition='#if !TARGET_API_MAC_CARBON',)functions.append(f)f = Method(OSStatus, 'SetWindowContentColor',    (WindowRef, 'window', InMode),    (RGBColor_ptr, 'color', InMode),)methods.append(f)f = Method(OSStatus, 'GetWindowContentColor',    (WindowRef, 'window', InMode),    (RGBColor, 'color', OutMode),)methods.append(f)f = Method(OSStatus, 'GetWindowContentPattern',    (WindowRef, 'window', InMode),    (PixPatHandle, 'outPixPat', InMode),)methods.append(f)f = Method(OSStatus, 'SetWindowContentPattern',    (WindowRef, 'window', InMode),    (PixPatHandle, 'pixPat', InMode),)methods.append(f)f = Method(OSStatus, 'ScrollWindowRect',    (WindowRef, 'inWindow', InMode),    (Rect_ptr, 'inScrollRect', InMode),    (SInt16, 'inHPixels', InMode),    (SInt16, 'inVPixels', InMode),    (ScrollWindowOptions, 'inOptions', InMode),    (RgnHandle, 'outExposedRgn', InMode),    condition='#if TARGET_API_MAC_CARBON',)methods.append(f)f = Method(OSStatus, 'ScrollWindowRegion',    (WindowRef, 'inWindow', InMode),    (RgnHandle, 'inScrollRgn', InMode),    (SInt16, 'inHPixels', InMode),    (SInt16, 'inVPixels', InMode),    (ScrollWindowOptions, 'inOptions', InMode),    (RgnHandle, 'outExposedRgn', InMode),    condition='#if TARGET_API_MAC_CARBON',)methods.append(f)f = Method(void, 'ClipAbove',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(void, 'SaveOld',    (WindowRef, 'window', InMode),    condition='#if !TARGET_API_MAC_CARBON',)methods.append(f)f = Method(void, 'DrawNew',    (WindowRef, 'window', InMode),    (Boolean, 'update', InMode),    condition='#if !TARGET_API_MAC_CARBON',)methods.append(f)f = Method(void, 'PaintOne',    (WindowRef, 'window', InMode),    (RgnHandle, 'clobberedRgn', InMode),)methods.append(f)f = Method(void, 'PaintBehind',    (WindowRef, 'startWindow', InMode),    (RgnHandle, 'clobberedRgn', InMode),)methods.append(f)f = Method(void, 'CalcVis',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(void, 'CalcVisBehind',    (WindowRef, 'startWindow', InMode),    (RgnHandle, 'clobberedRgn', InMode),)methods.append(f)f = Function(Boolean, 'CheckUpdate',    (EventRecord, 'theEvent', OutMode),)functions.append(f)f = Function(WindowPartCode, 'MacFindWindow',    (Point, 'thePoint', InMode),    (ExistingWindowPtr, 'window', OutMode),)functions.append(f)f = Function(ExistingWindowPtr, 'FrontWindow',)functions.append(f)f = Method(void, 'BringToFront',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(void, 'SendBehind',    (WindowRef, 'window', InMode),    (WindowRef, 'behindWindow', InMode),)methods.append(f)f = Method(void, 'SelectWindow',    (WindowRef, 'window', InMode),)methods.append(f)f = Function(ExistingWindowPtr, 'FrontNonFloatingWindow',)functions.append(f)f = Method(WindowRef, 'GetNextWindowOfClass',    (WindowRef, 'inWindow', InMode),    (WindowClass, 'inWindowClass', InMode),    (Boolean, 'mustBeVisible', InMode),    condition='#if TARGET_API_MAC_CARBON',)methods.append(f)f = Function(WindowRef, 'GetFrontWindowOfClass',    (WindowClass, 'inWindowClass', InMode),    (Boolean, 'mustBeVisible', InMode),    condition='#if TARGET_API_MAC_CARBON',)functions.append(f)f = Function(OSStatus, 'FindWindowOfClass',    (Point_ptr, 'where', InMode),    (WindowClass, 'inWindowClass', InMode),    (ExistingWindowPtr, 'outWindow', OutMode),    (WindowPartCode, 'outWindowPart', OutMode),    condition='#if TARGET_API_MAC_CARBON',)functions.append(f)f = Function(OSStatus, 'CreateStandardWindowMenu',    (OptionBits, 'inOptions', InMode),    (MenuRef, 'outMenu', OutMode),)functions.append(f)f = Method(OSStatus, 'SetWindowAlternateTitle',    (WindowRef, 'inWindow', InMode),    (CFStringRef, 'inTitle', InMode),)methods.append(f)f = Method(OSStatus, 'CopyWindowAlternateTitle',    (WindowRef, 'inWindow', InMode),    (CFStringRef, 'outTitle', OutMode),)methods.append(f)f = Function(void, 'InitWindows',    condition='#if !TARGET_API_MAC_CARBON',)functions.append(f)f = Function(void, 'GetWMgrPort',    (GrafPtr, 'wPort', OutMode),    condition='#if !TARGET_API_MAC_CARBON',)functions.append(f)f = Function(void, 'GetCWMgrPort',    (CGrafPtr, 'wMgrCPort', OutMode),    condition='#if !TARGET_API_MAC_CARBON',)functions.append(f)f = Method(Boolean, 'IsValidWindowPtr',    (WindowRef, 'possibleWindow', InMode),    condition='#if !TARGET_API_MAC_CARBON',)methods.append(f)f = Function(OSStatus, 'InitFloatingWindows',    condition='#if !TARGET_API_MAC_CARBON',)functions.append(f)f = Method(void, 'HiliteWindow',    (WindowRef, 'window', InMode),    (Boolean, 'fHilite', InMode),)methods.append(f)f = Method(void, 'SetWRefCon',    (WindowRef, 'window', InMode),    (long, 'data', InMode),)methods.append(f)f = Method(long, 'GetWRefCon',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(void, 'SetWindowPic',    (WindowRef, 'window', InMode),    (PicHandle, 'pic', InMode),)methods.append(f)f = Method(PicHandle, 'GetWindowPic',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(short, 'GetWVariant',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(OSStatus, 'GetWindowFeatures',    (WindowRef, 'window', InMode),    (UInt32, 'outFeatures', OutMode),)methods.append(f)f = Method(OSStatus, 'GetWindowRegion',    (WindowRef, 'window', InMode),    (WindowRegionCode, 'inRegionCode', InMode),    (RgnHandle, 'ioWinRgn', InMode),)methods.append(f)f = Method(OSStatus, 'GetWindowStructureWidths',    (WindowRef, 'inWindow', InMode),    (Rect, 'outRect', OutMode),)methods.append(f)f = Function(void, 'InvalRect',    (Rect_ptr, 'badRect', InMode),    condition='#if !TARGET_API_MAC_CARBON',)functions.append(f)f = Function(void, 'InvalRgn',    (RgnHandle, 'badRgn', InMode),    condition='#if !TARGET_API_MAC_CARBON',)functions.append(f)f = Function(void, 'ValidRect',    (Rect_ptr, 'goodRect', InMode),    condition='#if !TARGET_API_MAC_CARBON',)functions.append(f)f = Function(void, 'ValidRgn',    (RgnHandle, 'goodRgn', InMode),    condition='#if !TARGET_API_MAC_CARBON',)functions.append(f)f = Method(void, 'BeginUpdate',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(void, 'EndUpdate',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(OSStatus, 'InvalWindowRgn',    (WindowRef, 'window', InMode),    (RgnHandle, 'region', InMode),)methods.append(f)f = Method(OSStatus, 'InvalWindowRect',    (WindowRef, 'window', InMode),    (Rect_ptr, 'bounds', InMode),)methods.append(f)f = Method(OSStatus, 'ValidWindowRgn',    (WindowRef, 'window', InMode),    (RgnHandle, 'region', InMode),)methods.append(f)f = Method(OSStatus, 'ValidWindowRect',    (WindowRef, 'window', InMode),    (Rect_ptr, 'bounds', InMode),)methods.append(f)f = Method(void, 'DrawGrowIcon',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(void, 'SetWTitle',    (WindowRef, 'window', InMode),    (ConstStr255Param, 'title', InMode),)methods.append(f)f = Method(void, 'GetWTitle',    (WindowRef, 'window', InMode),    (Str255, 'title', OutMode),)methods.append(f)f = Method(OSStatus, 'SetWindowTitleWithCFString',    (WindowRef, 'inWindow', InMode),    (CFStringRef, 'inString', InMode),)methods.append(f)f = Method(OSStatus, 'CopyWindowTitleAsCFString',    (WindowRef, 'inWindow', InMode),    (CFStringRef, 'outString', OutMode),)methods.append(f)f = Method(OSStatus, 'SetWindowProxyFSSpec',    (WindowRef, 'window', InMode),    (FSSpec_ptr, 'inFile', InMode),)methods.append(f)f = Method(OSStatus, 'GetWindowProxyFSSpec',    (WindowRef, 'window', InMode),    (FSSpec, 'outFile', OutMode),)methods.append(f)f = Method(OSStatus, 'SetWindowProxyAlias',    (WindowRef, 'window', InMode),    (AliasHandle, 'alias', InMode),)methods.append(f)f = Method(OSStatus, 'GetWindowProxyAlias',    (WindowRef, 'window', InMode),    (AliasHandle, 'alias', OutMode),)methods.append(f)f = Method(OSStatus, 'SetWindowProxyCreatorAndType',    (WindowRef, 'window', InMode),    (OSType, 'fileCreator', InMode),    (OSType, 'fileType', InMode),    (SInt16, 'vRefNum', InMode),)methods.append(f)f = Method(OSStatus, 'GetWindowProxyIcon',    (WindowRef, 'window', InMode),    (IconRef, 'outIcon', OutMode),)methods.append(f)f = Method(OSStatus, 'SetWindowProxyIcon',    (WindowRef, 'window', InMode),    (IconRef, 'icon', InMode),)methods.append(f)f = Method(OSStatus, 'RemoveWindowProxy',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(OSStatus, 'BeginWindowProxyDrag',    (WindowRef, 'window', InMode),    (DragReference, 'outNewDrag', OutMode),    (RgnHandle, 'outDragOutlineRgn', InMode),)methods.append(f)f = Method(OSStatus, 'EndWindowProxyDrag',    (WindowRef, 'window', InMode),    (DragReference, 'theDrag', InMode),)methods.append(f)f = Method(OSStatus, 'TrackWindowProxyFromExistingDrag',    (WindowRef, 'window', InMode),    (Point, 'startPt', InMode),    (DragReference, 'drag', InMode),    (RgnHandle, 'inDragOutlineRgn', InMode),)methods.append(f)f = Method(OSStatus, 'TrackWindowProxyDrag',    (WindowRef, 'window', InMode),    (Point, 'startPt', InMode),)methods.append(f)f = Method(Boolean, 'IsWindowModified',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(OSStatus, 'SetWindowModified',    (WindowRef, 'window', InMode),    (Boolean, 'modified', InMode),)methods.append(f)f = Method(Boolean, 'IsWindowPathSelectClick',    (WindowRef, 'window', InMode),    (EventRecord_ptr, 'event', InMode),)methods.append(f)f = Method(OSStatus, 'WindowPathSelect',    (WindowRef, 'window', InMode),    (MenuRef, 'menu', InMode),    (SInt32, 'outMenuResult', OutMode),)methods.append(f)f = Method(Boolean, 'IsWindowPathSelectEvent',    (WindowRef, 'window', InMode),    (EventRef, 'inEvent', InMode),)methods.append(f)f = Method(OSStatus, 'HiliteWindowFrameForDrag',    (WindowRef, 'window', InMode),    (Boolean, 'hilited', InMode),)methods.append(f)f = Method(OSStatus, 'TransitionWindow',    (WindowRef, 'window', InMode),    (WindowTransitionEffect, 'effect', InMode),    (WindowTransitionAction, 'action', InMode),    (Rect_ptr, 'rect', InMode),)methods.append(f)f = Method(OSStatus, 'TransitionWindowAndParent',    (WindowRef, 'window', InMode),    (WindowRef, 'parentWindow', InMode),    (WindowTransitionEffect, 'effect', InMode),    (WindowTransitionAction, 'action', InMode),    (Rect_ptr, 'rect', InMode),)methods.append(f)f = Method(void, 'MacMoveWindow',    (WindowRef, 'window', InMode),    (short, 'hGlobal', InMode),    (short, 'vGlobal', InMode),    (Boolean, 'front', InMode),)methods.append(f)f = Method(void, 'SizeWindow',    (WindowRef, 'window', InMode),    (short, 'w', InMode),    (short, 'h', InMode),    (Boolean, 'fUpdate', InMode),)methods.append(f)f = Method(long, 'GrowWindow',    (WindowRef, 'window', InMode),    (Point, 'startPt', InMode),    (Rect_ptr, 'bBox', InMode),)methods.append(f)f = Method(void, 'DragWindow',    (WindowRef, 'window', InMode),    (Point, 'startPt', InMode),    (Rect_ptr, 'boundsRect', InMode),)methods.append(f)f = Method(void, 'ZoomWindow',    (WindowRef, 'window', InMode),    (WindowPartCode, 'partCode', InMode),    (Boolean, 'front', InMode),)methods.append(f)f = Method(Boolean, 'IsWindowCollapsable',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(Boolean, 'IsWindowCollapsed',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(OSStatus, 'CollapseWindow',    (WindowRef, 'window', InMode),    (Boolean, 'collapse', InMode),)methods.append(f)f = Function(OSStatus, 'CollapseAllWindows',    (Boolean, 'collapse', InMode),)functions.append(f)f = Method(OSStatus, 'GetWindowBounds',    (WindowRef, 'window', InMode),    (WindowRegionCode, 'regionCode', InMode),    (Rect, 'globalBounds', OutMode),)methods.append(f)f = Method(Boolean, 'ResizeWindow',    (WindowRef, 'window', InMode),    (Point, 'startPoint', InMode),    (Rect_ptr, 'sizeConstraints', InMode),    (Rect, 'newContentRect', OutMode),)methods.append(f)f = Method(OSStatus, 'SetWindowBounds',    (WindowRef, 'window', InMode),    (WindowRegionCode, 'regionCode', InMode),    (Rect_ptr, 'globalBounds', InMode),)methods.append(f)f = Method(OSStatus, 'RepositionWindow',    (WindowRef, 'window', InMode),    (WindowRef, 'parentWindow', InMode),    (WindowPositionMethod, 'method', InMode),)methods.append(f)f = Method(OSStatus, 'MoveWindowStructure',    (WindowRef, 'window', InMode),    (short, 'hGlobal', InMode),    (short, 'vGlobal', InMode),)methods.append(f)f = Method(Boolean, 'IsWindowInStandardState',    (WindowRef, 'window', InMode),    (Point, 'idealSize', OutMode),    (Rect, 'idealStandardState', OutMode),)methods.append(f)f = Method(OSStatus, 'ZoomWindowIdeal',    (WindowRef, 'window', InMode),    (WindowPartCode, 'partCode', InMode),    (Point, 'ioIdealSize', OutMode),)methods.append(f)f = Method(OSStatus, 'GetWindowIdealUserState',    (WindowRef, 'window', InMode),    (Rect, 'userState', OutMode),)methods.append(f)f = Method(OSStatus, 'SetWindowIdealUserState',    (WindowRef, 'window', InMode),    (Rect_ptr, 'userState', InMode),)methods.append(f)f = Method(OSStatus, 'GetWindowGreatestAreaDevice',    (WindowRef, 'inWindow', InMode),    (WindowRegionCode, 'inRegion', InMode),    (GDHandle, 'outGreatestDevice', OutMode),    (Rect, 'outGreatestDeviceRect', OutMode),)methods.append(f)f = Method(OSStatus, 'ConstrainWindowToScreen',    (WindowRef, 'inWindowRef', InMode),    (WindowRegionCode, 'inRegionCode', InMode),    (WindowConstrainOptions, 'inOptions', InMode),    (Rect_ptr, 'inScreenRect', InMode),    (Rect, 'outStructure', OutMode),)methods.append(f)f = Function(OSStatus, 'GetAvailableWindowPositioningBounds',    (GDHandle, 'inDevice', InMode),    (Rect, 'availableRect', OutMode),)functions.append(f)f = Method(void, 'HideWindow',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(void, 'MacShowWindow',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(void, 'ShowHide',    (WindowRef, 'window', InMode),    (Boolean, 'showFlag', InMode),)methods.append(f)f = Method(Boolean, 'MacIsWindowVisible',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(OSStatus, 'ShowSheetWindow',    (WindowRef, 'inSheet', InMode),    (WindowRef, 'inParentWindow', InMode),)methods.append(f)f = Method(OSStatus, 'HideSheetWindow',    (WindowRef, 'inSheet', InMode),)methods.append(f)f = Method(OSStatus, 'GetSheetWindowParent',    (WindowRef, 'inSheet', InMode),    (ExistingWindowPtr, 'outParentWindow', OutMode),)methods.append(f)f = Function(OSStatus, 'DisableScreenUpdates',)functions.append(f)f = Function(OSStatus, 'EnableScreenUpdates',)functions.append(f)f = Method(OSStatus, 'GetWindowPropertyAttributes',    (WindowRef, 'window', InMode),    (OSType, 'propertyCreator', InMode),    (OSType, 'propertyTag', InMode),    (UInt32, 'attributes', OutMode),    condition='#if TARGET_API_MAC_CARBON',)methods.append(f)f = Method(OSStatus, 'ChangeWindowPropertyAttributes',    (WindowRef, 'window', InMode),    (OSType, 'propertyCreator', InMode),    (OSType, 'propertyTag', InMode),    (UInt32, 'attributesToSet', InMode),    (UInt32, 'attributesToClear', InMode),    condition='#if TARGET_API_MAC_CARBON',)methods.append(f)f = Function(long, 'PinRect',    (Rect_ptr, 'theRect', InMode),    (Point, 'thePt', InMode),)functions.append(f)f = Function(RgnHandle, 'GetGrayRgn',)functions.append(f)f = Method(Boolean, 'TrackBox',    (WindowRef, 'window', InMode),    (Point, 'thePt', InMode),    (WindowPartCode, 'partCode', InMode),)methods.append(f)f = Method(Boolean, 'TrackGoAway',    (WindowRef, 'window', InMode),    (Point, 'thePt', InMode),)methods.append(f)f = Method(Boolean, 'GetAuxWin',    (WindowRef, 'window', InMode),    (AuxWinHandle, 'awHndl', OutMode),    condition='#if !TARGET_API_MAC_CARBON',)methods.append(f)f = Method(Boolean, 'GetWindowGoAwayFlag',    (WindowRef, 'window', InMode),    condition='#if !TARGET_API_MAC_CARBON',)methods.append(f)f = Method(Boolean, 'GetWindowSpareFlag',    (WindowRef, 'window', InMode),    condition='#if !TARGET_API_MAC_CARBON',)methods.append(f)f = Method(CGrafPtr, 'GetWindowPort',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(short, 'GetWindowKind',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(Boolean, 'IsWindowHilited',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(Boolean, 'IsWindowUpdatePending',    (WindowRef, 'window', InMode),    condition='#if TARGET_API_MAC_CARBON',)methods.append(f)f = Method(WindowRef, 'MacGetNextWindow',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(void, 'GetWindowStandardState',    (WindowRef, 'window', InMode),    (Rect, 'rect', OutMode),)methods.append(f)f = Method(void, 'GetWindowUserState',    (WindowRef, 'window', InMode),    (Rect, 'rect', OutMode),)methods.append(f)f = Method(void, 'SetWindowKind',    (WindowRef, 'window', InMode),    (short, 'kind', InMode),)methods.append(f)f = Method(void, 'SetWindowStandardState',    (WindowRef, 'window', InMode),    (Rect_ptr, 'rect', InMode),)methods.append(f)f = Method(void, 'SetWindowUserState',    (WindowRef, 'window', InMode),    (Rect_ptr, 'rect', InMode),)methods.append(f)f = Method(void, 'SetPortWindowPort',    (WindowRef, 'window', InMode),)methods.append(f)f = Method(void, 'GetWindowPortBounds',    (WindowRef, 'window', InMode),    (Rect, 'bounds', OutMode),)methods.append(f)f = Function(WindowRef, 'GetWindowFromPort',    (CGrafPtr, 'port', InMode),)functions.append(f)
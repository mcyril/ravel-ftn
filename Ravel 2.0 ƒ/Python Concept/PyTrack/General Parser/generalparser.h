//	¥	generalparser.h#ifndef	_GENERALPARSER_H#define	_GENERALPARSER_H#ifdef FIDOTECH_ATOMS# if PYTRACK_STANDALONE#  include "stringutl.h"# endif#endif#if PYTRACK_SHUFFLER# include <extras.h>#endif//	class of fetched object (kGPBMASK == kEXTRABITS)#ifdef FIDOTECH_ATOMS#define	kEXTRAISADDR	0x00000001#define	kEXTRAISMASK	0x00000002#endif#define	kERR			-1#define	kOK				0//	general purpose bits#define	kGPBMASK	0xFF000000#define	kPREFIXMASK	0x00FF0000#define	kEOL		0x00000000#define	kEXTRABITS	0x01000000#define	kNOTFOUND	0x01000000#define	kLONGNUMBER	0x08000000#define	kLITERAL	0x20000000#define	kPREFIXED	0x40000000#define	kCMDTOKEN	0x80000000typedef	struct _token_desc {	char		*token_name;	long		extradata;} token_desc;typedef union fetched_info {	char	*literal;	long	number;#ifdef FIDOTECH_ATOMS	addr	address;#endif} fetched_info;typedef	int (*parsercallback)(long tokenclass, long associated_info, fetched_info *info, void *refcon);int	parseoneline(char *stringtoparse, token_desc *tokens, token_desc *prefixes, void *refcon, parsercallback pcb);//extern	token_desc	*gTokens;#endif
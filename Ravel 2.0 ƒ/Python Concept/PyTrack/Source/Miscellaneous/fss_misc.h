//	fss_misc.h#ifndef _FSS_MISC_#define _FSS_MISC_//#include "path2fss.h"#include <Files.h>#ifdef __cplusplusextern "C" {#endif/* */OSErr _c_path2fss(const char * pathName, FSSpecPtr spec);/* *///#define	_c_path2fss(p,s)	__path2fss(p,s)OSErr	_c_fss2path(const FSSpecPtr spec, char * pathName);typedef struct findfile_data{	char	name[32];	long	size;	long	attrib;	OSType	dwFileType;	short	dwFileFlags;} _finddata_t, *findfile_dataPtr;typedef CInfoPBRec flFileInfo, *flFileInfoPtr; Boolean	_wildcmp (char *mask, char *name);long	_findfirst(char *filename, char *mask, findfile_dataPtr FindData);long	_findnext(long Handle, findfile_dataPtr FindData);void	_findclose(long);OSErr	get_finder_info (FSSpecPtr spec, FInfo *fndrInfo, FXInfo *itsFXInfo, Boolean *isDirectory);inline int filelength (int hfile){	long	length;	OSErr	err = GetEOF (hfile,&length);		return (err != noErr) ? -1 : length;}#define	chsize(hfile,cbFile)	SetEOF(hfile,cbFile)#define	_mkdir(s)				mkdir(s,0)#ifdef __cplusplus}#endif#endif